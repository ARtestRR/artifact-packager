name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PowerShell on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common
          wget -q "https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb"
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell
          pwsh -v

      - name: Install PowerShell on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install powershell-core --version=7.4.5 -y --force
          pwsh -v

      - name: Install 7-Zip on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y p7zip-full
          7z --help

      - name: Install 7-Zip on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          choco install 7zip -y --force
          refreshenv
          7z | Select-String "7-Zip"

      - name: Install Pester
        shell: pwsh
        run: |
          Install-Module -Name Pester -Force -Scope CurrentUser -AllowClobber -SkipPublisherCheck
          Import-Module Pester -PassThru | Select-Object Name, Version

      - name: Build and test
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          # 1. Create the .7z artifacts
          ./Create-Artifacts.ps1 -RootDir './dev_build'

          # 2. Run Pester tests directly against the test file,
          #    so $PSScriptRoot inside the test is correct
          Invoke-Pester './tests/Artifacts.Tests.ps1' -Output Detailed -PassThru |
            Out-File -FilePath test-results.xml
