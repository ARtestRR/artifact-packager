name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PowerShell
        uses: actions/setup-powershell@v4
        with:
          version: "7.4"

      - name: Install 7-Zip
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update && sudo apt-get install -y p7zip-full
          else
            choco install 7zip.install --version=23.1 --yes
          fi

      - name: Install Pester
        shell: pwsh
        run: |
          Install-Module -Name Pester -Force -Scope CurrentUser
          Import-Module Pester -PassThru | Select-Object Version

      - name: Build and test
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          
          # Проверяем существование dev_build
          if (-not (Test-Path "./dev_build")) {
              throw "Directory dev_build not found!"
          }

          # Запускаем скрипт
          .\Create-Artifacts.ps1 -RootDir (Resolve-Path "./dev_build")

          # Запускаем тесты
          $testResults = Join-Path $env:GITHUB_WORKSPACE "test-results.xml"
          Invoke-Pester ./tests/Artifacts.Tests.ps1 -OutputFile $testResults -OutputFormat NUnitXml